@model ResultParentModel

@{
	ViewData["Title"] = "Search Page";
}


<div class="text-center">
    <h1 class="display-6">Search Page</h1>
    <p style="font-size: 18px; font-weight: 600; color:darkred">The IR System&lsquo;s corpus spans several topics. You can perform a&nbsp;single term search or multiple term search by combining the following terms with &quot;እና&quot;&nbsp;and&nbsp;&quot;ወይም&quot;.</p>
    <p style="font-size: 16px; font-weight: 400;"> አሜሪካ, ቴስላ, ቲክቶክ, ቻትጂፒቲ, ክሪፕቶ, ትራምፕ, ዛከርበርግ, ኢላን, Or in multiple term search ኢላን እና ትራምፕ, ኢላን እና ዛከርበርግ, ኢላን ወይም ትራምፕ,ኢላን ወይም ዛከርበርግ
    </p>
    <p style="font-size: 18px; font-weight: 600; color:darkred"><em> If you want to test the system with other topics first upload files to the corpus via the <a asp-area="" asp-controller="Document" asp-action="Upload">Upload Page</a> </em></p>
</div>


<div class="d-flex justify-content-center pt-2 pb-4">

    @using (Html.BeginForm("StartSearch", "Search", FormMethod.Get, new { @class = "d-flex" })) //new { @class = "d-flex" }
    {
        <input name="Query" class="form-control me-2" type="search" placeholder="Search" aria-label="Search" autocomplete="off" required value="@if(Model != null) string.Join(' ', Model.query); else {  }">
        <input class="btn btn-outline-primary text-dark" type="submit" value="Search" />
    }

</div>




<div class="d-flex justify-content-center pt-5>
    <!-- Results Section (Expands Dynamically) -->
    @if(Model != null)
    {
        <div class="text-center resultIdent">
		<h4 class=" fw-bold">@Model.resultSet.Count() Search Results for &quot;@string.Join(' ', Model.query)&quot;</h4>
        </div>
        @if(!Model.resultDocuments.Any()) {
            <br />
            <hr />
            <h4 class=" fw-bold">@Model.resultSet.Count() Results Found for &quot;@string.Join(' ', Model.query)&quot;</h4>

        }
        else if (Model.resultDocuments != null)
        {
        <div class="border p-3 pb-0 pt-5 rounded bg-light results">
            <div class="results-container">
                @foreach (var result in Model.resultDocuments)
                {
                    <div class="card mb-4 shadow-sm w-100">
                        <h3 class="card-title p-1">@result.Item1.DocumentTitle</h3>
                        <h6 class="card-subTitle p-1"> TF/IDF Score: @result.Item2.ToString("F5")</h6>
                        <div class="card-body">
                            <p class="card-text">@result.Item1.DocumentContent.Substring(0, 500)</p>
                        </div>
                    </div>
                }
            </div>
        </div>
        }
    }
</div>


<!-- Custom Styling -->
<style>
    .results-container {
        max-height: 600px; 
        overflow-y: auto;
        padding-right: 10px; 
        max-width: 1800px;
        border-block: 4px solid #555555; 
        padding: 25px;

    }

    .resultIdent {
        max-width: 1200px
    }

    .card {
        background-color: #aaaaaa;
        border-left: 4px solid #007bff; 
    }

    .card-body {
        background-color: #ffffff;
    }

    .card-subTitle {
        text-align: center;
    }

</style>


